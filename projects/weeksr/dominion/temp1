Testing Adventurer Card.
VALID CASE TESTS.

VALID CASE TEST 1.

Updated Deck Card Count: 5

pre hand count, player 0: 5 
pre deck count, player 0: 5 
pre discard count, player 0: 0 
post hand count, player 0: 4 
post deck count, player 0: 0 
post discard count, player 0: 5 
FAILED 
   expected hand count: 6
   post hand count: 4
FAILED 
   expected deck count: -2
   post deck count: 0

VALID CASE TEST 2.

Updated Deck Card Count: 5

pre hand count, player 0: 5 
pre deck count, player 0: 5 
pre discard count, player 0: 0 
post hand count, player 0: 6 
post deck count, player 0: 3 
post discard count, player 0: 0 

VALID CASE TEST 3.

Updated Deck Card Count: 5

pre hand count, player 0: 5 
pre deck count, player 0: 5 
pre discard count, player 0: 0 
post hand count, player 0: 6 
post deck count, player 0: 3 
post discard count, player 0: 0 
VALID CASE TEST 4.

Updated Deck Card Count: 5

pre hand count, player 0: 5 
pre deck count, player 0: 5 
pre discard count, player 0: 1 
post hand count, player 0: 5 
post deck count, player 0: 0 
post discard count, player 0: 5 
FAILED 
   expected hand count: 6
   post hand count: 5
VALID CASE TEST 5.

Updated Deck Card Count: 5

pre hand count, player 0: 5 
pre deck count, player 0: 5 
pre discard count, player 0: 1 
post hand count, player 0: 6 
post deck count, player 0: 0 
post discard count, player 0: 4 
VALID CASE TEST 6.

Updated Deck Card Count: 5

pre hand count, player 0: 5 
pre deck count, player 0: 5 
pre discard count, player 0: 1 
post hand count, player 0: 6 
post deck count, player 0: 0 
post discard count, player 0: 4 
Functional Errors: 3
File 'dominion.c'
Lines executed:23.54% of 565
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:8
        -:    0:Programs:7
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
        -:    8:
     1200:    9:int compare(const void* a, const void* b) {
     1200:   10:  if (*(int*)a > *(int*)b)
    #####:   11:    return 1;
     1200:   12:  if (*(int*)a < *(int*)b)
      320:   13:    return -1;
      880:   14:  return 0;
        -:   15:}
        -:   16:
    #####:   17:struct gameState* newGame() {
    #####:   18:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   19:  return g;
        -:   20:}
